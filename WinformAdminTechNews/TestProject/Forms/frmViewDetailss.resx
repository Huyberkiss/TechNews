<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAgUAAAIFAVPEthUAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEKklEQVR4Xt3aS6hVVRzH8e0jzSda4IvUgSgRFx+kDkTEgfgI0Yk5EJFQsGHdGjhLS0hQERRLfKII
        ilJNBAdqAyUERSgHUuEjDIvAUMnKd9fvf7vO7X/2/e979usc71o/+IBn3bXX3v8l956919pRR0fHS0d6
        YaT1s2YzG1uJTMBF/IclVp9mMhtbhazEX5APYoPVr5nMxmYjQ3DYFa2FPwFkJq65gpPCnQDSG+vwGLpo
        LcwJIKNxxhXZnfAmgCzGbVdgI+FMAOmPHa6wrMKYAPIWLrui8vB/Asj7+NcVlJe/E0CG42tXSFF+TgCZ
        g19dEWX4NQGkDz7DU+hCivJnAsh4fOcuvCrbMcw6X7OYjY2Q5bgLffFVegj5lZKnxOP4EG+jj3U9ZZiN
        acgg7IO+2Fa6j1NYjUHWNeZlNlrINPwEfUEvkzxG78YM63qzMhs1Iqs17XgEfQE9yWm0WdffiNlYQ0bg
        JPTJeir5JvoCr1u1pDEbBZmPP6BP4oM7WGTVZOnaEEX9sBWyRqcH9skzrEvWZqn/EEUTcQl6MJ8dwQBd
        Y9L//4ii9yBfM3qAEJxA6v2DZCiOInlgSPZaxQvJedcpdOZzhqTq+/merMu3g0Rub/cj2TlEv2Bg3QSo
        mXgXzXzA6Sm2mBMQf4iicTjnOoZK7hgnmxMQN7xY5PjEddQHhuRQZ726eI3MgvzO6AND8QDxM4NZfA2R
        ewS5m9IHh+LjuMZk0RayCnobOwQ/x7Uli01D5EWGC+7gUIw1i01D+uJzyNNWcjAfLTMLbYTMxS03iM+2
        mgVmQV7DN26gqmzCJMzDGnyKg/gBVv+yzpnF5UHW4h83YFmpGyNkKnZCVnySxxX1o3myvMib+N4NWkbD
        nSHyKlagivPdNE9SBJH3AbahzFJa5q0xIufb444r6rY5eBlkIYoupubeGySyklV0O/5vc9CySNHl9NwT
        IIj8ffjNjZHHDXPAqpAPIPt8yROnKTQBgixQ42R1yhysSmQyrrgTNlJ4AgQ5oMbK4ktzoKqRAdjlTtqd
        shMwDHl+FdrNgZqFLMWf7uSWUhMgiKxsJcdN02YO0kxkDL51F5BUxQQMRJbFnHxPg1Uiaa/Nlp4AQbLc
        JG2K+yYPbiUyHVfdBYn1Vr+8SJa/N9PivsmDW40Mxl78jtlWn7zIR6gVajnZ2VcfGAoiu9u6YE1u1eP/
        /bivPjAU5CtXrOVYXV/9IRQkbYtfdr8n1PXVH0JARkKWvXXhNSu79E82+I5sVgVrB8z+VqOviCzTWS95
        yLNI3aZo5zFWo6/IRlewdh1vWP2F2egjIgupT6CLv4GxVv8as9E3pA33oIuXfc1xVn/NbPQJGYWb0MWf
        xRirf5LZ6BMir8nWCpe7PNlbyPxWudnoE1K76ZF1hnesPt0xG31CXsEUDLZ+3r2O6Dk8xUDY+Ff4PAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>